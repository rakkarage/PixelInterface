[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://PixelInterface/Sprites/MaskGate.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform float ScalarUniform;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Color:6
	vec3 n_out6p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out6p1 = 1.000000;

// Scalar:8
	float n_out8p0 = 0.500000;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_out4p0 = n_out5p0 - vec3(n_out8p0);

// ScalarUniform:12
	float n_out12p0 = ScalarUniform;

// VectorOp:9
	vec3 n_out9p0 = n_out4p0 * vec3(n_out12p0);

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out8p0) + n_out9p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out10p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:3
	float n_in3p0 = 1.00000;
	float n_out3p0 = n_in3p0 - n_out2p1;

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -822, 152 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 160 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 260, 120 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 460, 220 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -300, 180 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -520, 160 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 460, 100 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -540, 260 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -100, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 80, 240 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -320, 340 )
nodes/fragment/connections = PoolIntArray( 2, 1, 3, 1, 3, 0, 0, 1, 6, 0, 0, 0, 5, 0, 4, 0, 4, 0, 9, 0, 8, 0, 4, 1, 9, 0, 10, 1, 8, 0, 10, 0, 10, 0, 2, 0, 12, 0, 9, 1 )
